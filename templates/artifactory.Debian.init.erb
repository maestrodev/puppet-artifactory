#!/bin/bash

### BEGIN INIT INFO
# Provides: artifactory
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop artifactory
# Description: Artifactory is an artifact management server, written by JFrog
### END INIT INFO

RETVAL=0
LOCKFILE=/var/lock/artifactory
logfile=/var/log/artifactory
artifactory_dir=<%= @app_dir %>/current
artifactory_data=<%= @app_data %>
user=<%= @username %>
DAEMON_START="$artifactory_dir/bin/artifactory.sh"
DAEMON_STOP="$artifactory_dir/tomcat/bin/catalina.sh"
DAEMON_ARGS="start"

start() {
  export CATALINA_OUT=$logfile
  export ARTIFACTORY_HOME=$artifactory_data

  if [ -e $LOCKFILE ] 
  then
  	echo "$LOCKFILE exists, Artifactory already running"
    exit 1 
  fi

  if [ -e '/etc/default/artifactory' ]
  then
    source /etc/default/artifactory
  fi

  touch $LOCKFILE
  touch $logfile
  chown $user $logfile
  echo "Starting Artifactory"
  start-stop-daemon -c $user --start --quiet --exec $DAEMON_START $DAEMON_ARGS > /dev/null || return 1
}

stop() {
  echo "Stopping Artifactory"
  rm $LOCKFILE
  su -l $user -c "$DAEMON_STOP stop" > /dev/null
  rm $PIDFILE
}

status() {
  PIDFILE=$artifactory_dir/run/artifactory.pid
  if [ -e $LOCKFILE ] && [ -e $PIDFILE ]
  then
    pid=`cat $PIDFILE`
    echo "Artifactory is running with pid $pid"
  else
    echo "Artifactory is stopped"
  fi
}


case "$1" in
  start)
    start
  ;;
  stop)
  	stop
  ;;
  restart)
  	stop
    start
  ;;
  status)
    status
  ;;
  *)
  echo $"Usage: $0 {start|stop|restart|status}"
  exit 2
esac
